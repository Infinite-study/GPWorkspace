https://git-scm.com/book/ko/v1/Git%EC%9D%98-%EA%B8%B0%EC%B4%88
-Git-%EC%A0%80%EC%9E%A5%EC%86%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0

https://github.com/KennethanCeyer/tutorial-git

git명령어 및 git을 이용하기 위한 기본 코드

1. git을 사용하고자 하는 풀더에 접근한다 // $cd ~/study/repository 

2. git init 을 사용하여 .git 파일을 만듦 // $git init  이 때, git이 설치되어 있어야 함.
 * 최초 git 설정 git config --global user.name "seonhyun"
	       git config --global user.email "c7324347@gmail.com"
3. git remote add 별명 주소 // $git remote add study adress 를 입력하여 study라는 별칭으로
address에 접근한다.

4. vi file , git add file // 파일을 만들어서 내용을 작성 한 후 add 해준다.
	git remove file // add한 파일을 삭제 할 수 있음.

5. git commit -m "message" // $git commit -m "message" add한 파일을 commit 해준다.

6. git push study master 또는 branch name // $git push study master or branchname

7. 브런치 생성방법 // $git checkout -b branchname or $git branch branchname 을 사용하여
새로운 브런치 (연결고리)를 생성한다.
   브런치의 삭제는 // $git branch -d branchname 을 이용한다.
8.git status // 지금 현재 file의 add또는 remove 상태를 확인 해준다.

===============================================

git clone 명령어를 사용하여 원격 저장소에 저장된 파일을 컴퓨터로 복사 할 수 있음
$git clone https://github.com/...................

소스 복원
 * git을 쓰는 이유중에 중요한 부분을 차지하는 영역
 * 정상적으로 commit 된 history는 리비전으로 git에 관리됨
 * 실수로 잘못 작업하였거나, 예전 버전으로 롤백하여 적용할 경우 예전버전으로 리셋할 수 있음
 * 리셋은 $git reset 명령을 사용
   $git rest HEAD^ --soft
   * HEAD를 확인하고 싶으면 git reflog를 입력하면 나옴
  git rest의 옵션 중 리셋 특성을 정하는 --soft , --hard, --mixed 옵션이 있음
  soft : 약한 특성의 리셋, 되돌릴 때 기존의 인덱스와 워킹트리를 보존
  hard : 강한 특성의 리셋, 되돌릴 때 기존의 인덱스와 워킹트리를 버림
  mixed : 중간 특성의 리셋, 되돌릴 때 기존의 인덱스는 버리고 워킹트리를 보존

# 바로 이전 단계로 인덱스와 워킹트리를 버리고 리셋.
$ git reset HEAD^ --hard 
    
# 바로 두번째 전 단계로 인덱스와 워킹트리를 버리고 리셋.
$ git reset HEAD~2 --hard 
    
# 특정 리비전의 기록으로 인덱스는 버리고 워킹트리를 보존하여 리셋.
$ git reset 991ee8c --mixed

